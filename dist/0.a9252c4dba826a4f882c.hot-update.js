webpackHotUpdate(0,{

/***/ 372:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(81), RootInstanceProvider = __webpack_require__(89), ReactMount = __webpack_require__(91), React = __webpack_require__(159); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {\n\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar __extends = undefined && undefined.__extends || function (d, b) {\n    for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n    }function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __assign = undefined && undefined.__assign || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) {\n            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n    }\n    return t;\n};\nvar React = __webpack_require__(159);\nvar classNames = __webpack_require__(346);\n__webpack_require__(373);\nvar Utils_1 = __webpack_require__(261);\nvar TableHead_1 = __webpack_require__(375);\nvar TableBody_1 = __webpack_require__(376);\nvar TableFooter_1 = __webpack_require__(381);\nvar TableSearch_1 = __webpack_require__(385);\nvar Table = function (_super) {\n    __extends(Table, _super);\n    function Table(props) {\n        _super.call(this, props);\n        this.state = {\n            dataSource: [],\n            pageSize: props.pageSize || 10,\n            page: props.page || 0,\n            detailTemplateSelectedElements: props.detailTemplateSelectedElements || [],\n            selectedElements: props.selectedElements || [],\n            searchedItems: []\n        };\n    }\n    Table.prototype.componentDidMount = function () {\n        var self = this;\n        self.init();\n    };\n    Table.prototype.init = function () {\n        var updatedDataSource = [];\n        this.props.dataSource.forEach(function (element) {\n            updatedDataSource.push(element);\n        });\n        this.setState({\n            dataSource: updatedDataSource\n        });\n        this.state.dataSource.length > 0 ? this.loadDataSource(this.state.dataSource) : null;\n    };\n    Table.prototype.loadDataSource = function (dataSource) {\n        var self = this;\n        var setDataSourceState = function setDataSourceState(dataSource) {\n            self.setState({\n                dataSource: dataSource\n            });\n        };\n        if (Array.isArray(dataSource)) {\n            if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                var newDataSource_1 = [];\n                dataSource.forEach(function (element) {\n                    newDataSource_1.push({\n                        '_Array': element\n                    });\n                });\n                setDataSourceState(newDataSource_1);\n            } else {\n                setDataSourceState(dataSource);\n            }\n        } else if ((typeof dataSource === 'undefined' ? 'undefined' : _typeof(dataSource)) === 'object') {\n            setDataSourceState([dataSource]);\n        } else {\n            setDataSourceState(dataSource);\n        }\n    };\n    Table.prototype.detailTemplateToggleAll = function (dataSource) {\n        var detailTemplateSelectedElements = this.state.detailTemplateSelectedElements;\n        this.setState({\n            detailTemplateSelectedElements: Utils_1.arraysEqual(dataSource, detailTemplateSelectedElements) ? [] : dataSource\n        });\n    };\n    Table.prototype.detailTemplateToggleSelectedElements = function (element) {\n        var self = this;\n        var detailTemplateSelectedElements = self.state.detailTemplateSelectedElements;\n        var detailTemplateSelectedElementsArray = detailTemplateSelectedElements;\n        if (detailTemplateSelectedElementsArray.includes(element)) {\n            for (var i = 0; i < detailTemplateSelectedElementsArray.length; i++) {\n                if (detailTemplateSelectedElementsArray[i] === element) {\n                    detailTemplateSelectedElementsArray.splice(i, 1);\n                    self.setState({\n                        detailTemplateSelectedElements: detailTemplateSelectedElementsArray\n                    });\n                }\n            }\n        } else {\n            detailTemplateSelectedElementsArray.push(element);\n            self.setState({\n                detailTemplateSelectedElements: detailTemplateSelectedElementsArray\n            });\n        }\n    };\n    Table.prototype.selectAll = function (dataSource) {\n        var selectedElements = this.state.selectedElements;\n        this.setState({\n            selectedElements: Utils_1.arraysEqual(dataSource, selectedElements) ? [] : dataSource\n        });\n    };\n    Table.prototype.toggleSelectedElements = function (element) {\n        var self = this;\n        var selectedElements = self.state.selectedElements;\n        var _a = self.props,\n            rowIsSelectable = _a.rowIsSelectable,\n            onCheck = _a.onCheck;\n        var selectedElementsArray;\n        if (rowIsSelectable === 'single') {\n            selectedElementsArray = [];\n        } else {\n            selectedElementsArray = selectedElements;\n        }\n        if (selectedElementsArray.includes(element)) {\n            for (var i = 0; i < selectedElementsArray.length; i++) {\n                if (selectedElementsArray[i] === element) {\n                    selectedElementsArray.splice(i, 1);\n                    self.setState({\n                        selectedElements: selectedElementsArray\n                    });\n                }\n            }\n        } else {\n            selectedElementsArray.push(element);\n            self.setState({\n                selectedElements: selectedElementsArray\n            });\n            onCheck ? onCheck(element) : null;\n        }\n    };\n    Table.prototype.firstPage = function () {\n        this.setState({\n            page: 0\n        });\n    };\n    Table.prototype.previousPage = function () {\n        this.setState({\n            page: this.state.page -= 1\n        });\n    };\n    Table.prototype.nextPage = function () {\n        this.setState({\n            page: this.state.page += 1\n        });\n    };\n    Table.prototype.lastPage = function (numberOfPages) {\n        this.setState({\n            page: numberOfPages - 1\n        });\n    };\n    Table.prototype.gotoPage = function (i) {\n        this.setState({\n            page: i,\n            pageSize: this.state.pageSize\n        });\n    };\n    Table.prototype.changePageSize = function (pageSize) {\n        this.setState({\n            pageSize: pageSize,\n            page: 0\n        });\n        this.props.onPageSizeChange ? this.props.onPageSizeChange(pageSize) : null;\n    };\n    Table.prototype.sortCollection = function (dataSource, key, sortType) {\n        var self = this;\n        var sortOrder;\n        var sortedDataSource = dataSource.sort(function (a, b) {\n            switch (_typeof(a[key])) {\n                case 'string':\n                    var itemPrev = a[key].toLowerCase();\n                    var itemNext = b[key].toLowerCase();\n                    if (itemPrev < itemNext) return -1;\n                    if (itemPrev > itemNext) return 1;\n                    break;\n                case 'number':\n                    return a[key] - b[key];\n                default:\n            }\n        });\n        if (sortType === 'asc') {\n            sortOrder = sortedDataSource;\n        } else {\n            sortOrder = sortedDataSource.reverse();\n        }\n        self.setState({\n            dataSource: sortOrder,\n            page: 0\n        });\n    };\n    Table.prototype.toggleSorting = function (key, sortType) {\n        var self = this;\n        self.sortCollection(self.state.dataSource, key, sortType);\n    };\n    Table.prototype.filterItems = function (term, keys) {\n        var self = this;\n        var state = self.state;\n        self.setState({\n            searchedItems: Utils_1.search(state.dataSource, term, keys),\n            page: 0\n        });\n    };\n    Table.prototype.render = function () {\n        var self = this;\n        var props = self.props;\n        var detailTemplate = props.detailTemplate,\n            sortable = props.sortable,\n            onPageChange = props.onPageChange,\n            hideHeader = props.hideHeader,\n            detailTemplateHideToggle = props.detailTemplateHideToggle,\n            rowIsSelectable = props.rowIsSelectable,\n            checkable = props.checkable,\n            hideColumns = props.hideColumns,\n            onRowSelect = props.onRowSelect,\n            pageSizerOptions = props.pageSizerOptions;\n        var _a = self.state,\n            columns = _a.columns,\n            dataSource = _a.dataSource,\n            page = _a.page,\n            pageSize = _a.pageSize,\n            detailTemplateSelectedElements = _a.detailTemplateSelectedElements,\n            selectedElements = _a.selectedElements;\n        var columnsArray;\n        if (props.columns) {\n            columnsArray = props.columns;\n        } else {\n            columnsArray = [];\n            if (dataSource.length) {\n                if (Array.isArray(dataSource)) {\n                    if (typeof dataSource[0] === 'string' || typeof dataSource[0] === 'number') {\n                        columnsArray.push({ name: '_Array' });\n                    } else {\n                        Object.keys(dataSource[0]).map(function (key) {\n                            columnsArray.push({ name: key });\n                        });\n                    }\n                }\n            }\n        }\n        var renderedPage = [];\n        var numberPerPage, numberOfPages, renderedDataSource, activeRows;\n        if (this.state.searchedItems.length > 0) {\n            activeRows = this.state.searchedItems;\n        } else {\n            activeRows = dataSource;\n        }\n        if (pageSize) {\n            numberPerPage = pageSize;\n            numberOfPages = Math.ceil(activeRows.length / pageSize);\n        } else {\n            numberPerPage = pageSize;\n            numberOfPages = Math.ceil(activeRows.length / pageSize);\n        }\n        var begin = page * parseInt(numberPerPage);\n        var end = begin + parseInt(numberPerPage);\n        var pageList = activeRows.slice(begin, end);\n        pageList.map(function (item, index) {\n            renderedPage.push(item);\n        });\n        var tableProps = {\n            dataSource: renderedPage,\n            columns: columnsArray,\n            hideHeader: hideHeader,\n            detailTemplate: detailTemplate,\n            detailTemplateSelectedElements: detailTemplateSelectedElements,\n            selectedElements: selectedElements,\n            checkable: checkable,\n            detailTemplateHideToggle: detailTemplateHideToggle,\n            hideColumns: hideColumns\n        };\n        var headProps = {\n            detailTemplateToggleAll: this.detailTemplateToggleAll.bind(this),\n            selectAll: this.selectAll.bind(this),\n            sortable: sortable,\n            toggleSorting: this.toggleSorting.bind(this)\n        };\n        var bodyProps = {\n            rowIsSelectable: rowIsSelectable,\n            toggleSelectedElements: this.toggleSelectedElements.bind(this),\n            detailTemplateToggleSelectedElements: this.detailTemplateToggleSelectedElements.bind(this),\n            onRowSelect: onRowSelect\n        };\n        var footerProps = {\n            currentPage: page,\n            numberOfPages: numberOfPages,\n            numberPerPage: numberPerPage,\n            nextPage: this.nextPage.bind(this),\n            previousPage: this.previousPage.bind(this),\n            firstPage: this.firstPage.bind(this),\n            gotoPage: this.gotoPage.bind(this),\n            lastPage: this.lastPage.bind(this),\n            changePageSize: this.changePageSize.bind(this),\n            pageSizerOptions: pageSizerOptions,\n            dataSource: dataSource,\n            pageSize: pageSize,\n            onPageChange: onPageChange\n        };\n        var tableSearchProps = {\n            filterItems: this.filterItems.bind(this),\n            searchableKeys: this.props.searchableKeys,\n            searchTitle: this.props.searchTitle\n        };\n        var tableClass = classNames('r-Table', { 'e-selectable': props.rowIsSelectable });\n        if (columnsArray.length) {\n            return React.createElement(\"div\", { className: tableClass }, React.createElement(TableFooter_1.default, __assign({}, footerProps)), React.createElement(TableSearch_1.default, __assign({}, tableSearchProps)), React.createElement(\"table\", null, React.createElement(TableHead_1.default, __assign({}, tableProps, headProps)), React.createElement(TableBody_1.default, __assign({}, tableProps, bodyProps))), React.createElement(TableFooter_1.default, __assign({}, footerProps)));\n        } else {\n            return React.createElement(\"div\", { className: \"p10 block text-center\" }, React.createElement(\"small\", null, React.createElement(\"strong\", null, \"Table\"), \" - No columns defined.\"));\n        }\n        ;\n    };\n    return Table;\n}(React.Component);\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Table;\n\n/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(262); if (makeExportsHot(module, __webpack_require__(159))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error(\"Cannot not apply hot update to \" + \"Table.tsx\" + \": \" + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./recoil/src/components/Table/Table.tsx\n ** module id = 372\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./recoil/src/components/Table/Table.tsx?");

/***/ }

})